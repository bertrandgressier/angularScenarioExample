{
  "name": "grunt-ng-constant",
  "description": "Plugin for dynamic generation of angular constant modules.",
  "version": "0.4.1",
  "homepage": "https://github.com/werk85/grunt-ng-constant",
  "author": {
    "name": "Malte Legenhausen",
    "email": "legenhausen@werk85.de"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/werk85/grunt-ng-constant.git"
  },
  "bugs": {
    "url": "https://github.com/werk85/grunt-ng-constant/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/werk85/grunt-ng-constant/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "ejs": "~0.8.3"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-ng-constant\n\n> Plugin for dynamic generation of angular constant modules.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-ng-constant --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-ng-constant');\n```\n\n## The \"ngconstant\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `ngconstant` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  ng_constant: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: [\n      // Target-specific module configurations.\n    ],\n  },\n})\n```\n\n### Options\n\n#### options.space\nType: `String`\nDefault value: `'\\t'`\n\nA string that defines how the `JSON.stringify` method will prettify your code. You can get more information in the (MDN Documentation)[https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/stringify].\n\n#### options.deps\nType: `Array` or `Boolean`\nDefault value: `[]`\n\nAn array that specifies the default dependencies a module should have. When your module should not have any modules, so you can append the constants to an already existing one, you can set `deps` to `false`.\n\n\n### Usage Examples\n\n#### Default Options\nIn this example I convert the package.json information in an angular module. So I am able to display e.g. the current version of the application in the app.\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    dist: [\n      {\n        dest: 'dist/constants.js',\n        name: 'constants',\n        constants: {\n          package: grunt.file.readJSON('package.json')\n        }\n      }\n    ]\n  },\n})\n```\n\n#### Custom Options\nIn this example we set custom configurations for the `space` and `deps` parameter. So we create a module that has `dep1` and `dep2` as dependency and defines to different constants `constants1` and `constants2` with custom values. The `space` parameter is set to a ` `.\n\n```js\ngrunt.initConfig({\n  ngconstant: {\n    options: {\n      space: ' ',\n      deps: ['dep1', 'dep2']\n    },\n    dist: [\n      {\n        dest: 'dist/module.js',\n        name: 'someModule',\n        constants: {\n          'constant1': 'some value you want to set as constant value. This can be of any type that can be transformed via JSON.stringify',\n          'constant2': {\n            'key1': 'value1',\n            'key2': 42\n          }\n        }\n      }\n    ]\n  },\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-ng-constant@0.4.1",
  "dist": {
    "shasum": "9265287af932443218126cdec05c96fe3df35a50"
  },
  "_from": "grunt-ng-constant@~0.4.0",
  "_resolved": "https://registry.npmjs.org/grunt-ng-constant/-/grunt-ng-constant-0.4.1.tgz"
}
